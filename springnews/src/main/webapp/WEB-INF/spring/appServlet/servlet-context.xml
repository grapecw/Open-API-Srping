<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- 클라이언트가 보내는 리소스를 resources에 매핑하라? 대충 그런 뜻이였음 -->
	<!-- 클라이언트가 직접 접근이 가능한 폴더이다. -->
	<resources mapping="/mypage/**" location="/mypage/" />
	<!-- 이런 식으로 추가하면 클라이언트도 이제 mypage도 직접 접근,요청이 가능하다. -->
	<!-- 그리고 폴더도 추가하자. -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	<!-- 보내는 리졸버에다 /WEB-INF/views/를 앞에다 뒤에다 .jsp를 붙힌다. 즉, jsp말고 html을 붙히면 jsp가 
		받는다. -->


	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver" />
		<beans:property name="url"
			value="jdbc:oracle:thin:@localhost:1521:XE" />
		<beans:property name="username" value="jdbctest" />
		<beans:property name="password" value="jdbctest" />
	</beans:bean>

	<beans:bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation"
			value="classpath:/resource/mybatis-config.xml" />
		<beans:property name="mapperLocations"
			value="classpath:/resource/*Mapper.xml" />
	</beans:bean>

	<beans:bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<beans:constructor-arg index="0"
			ref="sqlSessionFactory" />
	</beans:bean>

<!-- 이부분은 멀티 파트와 sql에 관한 부분 Mapper.xml 이 없으므로 에러 나니까 필요하면 열자-->


	<context:component-scan
		base-package="my.spring.springnews" />
	<context:component-scan base-package="dao" />
	<context:component-scan base-package="vo" />
	<!-- my.spring.springedu디렉토리의 annotation을 찾아서 해달라는 것을 업급해주는 것이다. -->
	
	
	
</beans:beans>
